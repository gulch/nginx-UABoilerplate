user www-data;
worker_processes auto;			# кількість процесів (встановлюємо по кількості ядер процессора), або auto, щоб nginx сам визначив
worker_priority -5;			# пріоритет робочого процесу (-20 високий пріоритет. 20 - низький)
pid /var/run/nginx.pid;
worker_rlimit_nofile	16384;		# ліміт на число відкритих файлів

events {	
	worker_connections 8192;	# максимальне число з'єднань
	multi_accept on;	# робочий процес за один раз буде приймати відразу всі з'єднання	
	use epoll;			# метод обробки з'єднань - http://nginx.org/ru/docs/events.html#epoll
}

http {	
	charset utf-8;		# вказуємо кодування. буде вказано в Content-Type
	sendfile on;		# дозволяє використовувати sendfile()	
	tcp_nopush on;		# дозволяє передавати заголовок відповіді і початок файлу в одному пакеті і передавати файл повними пакетами в Linux	
	tcp_nodelay on;		# активація параметра TCP_NODELAY
	ssi off;    		# відключаємо SSI
    autoindex off;    	# забороняємо вивід лістингу каталога
	server_tokens off;	# не показуємо версію в заголовках
	client_max_body_size 16m; 	# максимальний розмір тіла запиту
	keepalive_timeout 65s;		# час, в секундах, через який keep-alive з'єднання буде закрито
	keepalive_requests 100;		# максимальна кількість запитів які можна зробити по одному keep-alive з'єднання. якщо досягнута ця кількість, то з'єднання закриється
	send_timeout 15s;			# задає таймаут в секундах при передачі відповіді клієнту. якщо за цей час клієнт нічого не прийме, то з'єднання закриється
	reset_timedout_connection on;	# дозволяє скидати з'єднання по таймауту
	client_body_timeout 10s;		# задає таймаут в секундах при читанні тіла запиту від клієнта.
									# цей таймаут встановлються між двома послідовними операціями читання (не на всю передачу)


	# Використовуйте "open_file_cache off" в середовищі розробки (dev environment)
	open_file_cache                 max=300 inactive=120s;
	open_file_cache_valid    		300s;
	open_file_cache_min_uses 		2;
	open_file_cache_errors          on;

	# формат запису в лог-файл
  	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';                    
    access_log off;		# вимикаємо лог доступу
  	error_log /var/log/nginx/error.log error;	# шлях до файлу логу помилок. виводимо помилки рівня error, crit, alert і emerg

  	include mime.types;
	default_type application/octet-stream;		# задає MIME-тип відповіді по-замовчуванню	

	gzip on; 				# активуємо gzip стискання ресурсів
	gzip_disable "msie6";	# не стискати для Internet Explorer <=6
	gzip_proxied any;		# стискаємо запити через проксі
	gzip_comp_level 5;		# ступінь стискання від 1 до 9
	gzip_min_length 1024;	# мінімальний розмір відповіді в байтах, що підлягає стисканню
	gzip_vary on;			# видавати в заголовку директиву Vary: Accept-Encoding
	gzip_types 
		application/atom+xml
	    application/javascript
	    application/json
	    application/ld+json
	    application/manifest+json
	    application/rdf+xml
	    application/rss+xml
	    application/schema+json
	    application/vnd.geo+json
	    application/vnd.ms-fontobject
	    application/x-font-ttf
	    application/x-javascript
	    application/x-web-app-manifest+json
	    application/xhtml+xml
	    application/xml
	    font/eot
	    font/opentype
	    image/bmp
	    image/svg+xml
	    image/vnd.microsoft.icon
	    image/x-icon
	    text/cache-manifest
	    text/css
	    text/javascript
	    text/plain
	    text/vcard
	    text/vnd.rim.location.xloc
	    text/vtt
	    text/x-component
	    text/x-cross-domain-policy
	    text/xml;

	gzip_static  on;	# перевіряємо чи є готовий стиснений файл.gz і якщо є, то віддаємо його.
						#потребує модуль http://nginx.org/en/docs/http/ngx_http_gzip_static_module.html

	more_set_headers "Server: thetalab.tk";	# можемо встановити довільний заголовок відповіді 
											# потребує модуль http://wiki.nginx.org/HttpHeadersMoreModule

	#fastcgi_cache_path /tmp/nginx/fcgi-cache/ levels=1:2   keys_zone=phpCACHE:100m;	
	
	include /etc/nginx/blockips.conf;
	include /etc/nginx/sites-enabled/*;
}